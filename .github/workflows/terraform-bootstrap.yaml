name: Terraform Bootstrap

on:
  workflow_dispatch:

jobs:
  bootstrap-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up ENV Variables
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          GCP_REGION: ${{ vars.GCP_REGION }}
          GCP_PROJECT_NAME: ${{ vars.GCP_PROJECT_NAME }}
          GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
        run: |
          echo "TF_VAR_project_id=${GCP_PROJECT_ID}" >> $GITHUB_ENV
          echo "TF_VAR_region=${GCP_REGION}" >> $GITHUB_ENV
          echo "TF_VAR_project_name=${GCP_PROJECT_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_initial_service_account_email=${{ vars.GITHUB_SERVICE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV

      - name: Terraform init  
        run: terraform init
        working-directory: Terraform/bootstrap

      - name: Terraform plan
        run: terraform plan -out=tfplan
        working-directory: Terraform/bootstrap

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan
        working-directory: Terraform/bootstrap

      - name: Capture outputs
        run: |
          mkdir -p /tmp/credentials
          terraform output -raw tfstate_bucket > /tmp/credentials/bucket_name_staging.txt
          terraform output -raw tf_sa_key_json > /tmp/credentials/sa_key_staging.json
        working-directory: Terraform/bootstrap

      - name: Upload bucket name and service account key to artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-credentials-staging
          path: /tmp/credentials/

  bootstrap-production:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up ENV Variables
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          GCP_REGION: ${{ vars.GCP_REGION }}
          GCP_PROJECT_NAME: ${{ vars.GCP_PROJECT_NAME }}
          GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
        run: |
          echo "TF_VAR_project_id=${GCP_PROJECT_ID}" >> $GITHUB_ENV
          echo "TF_VAR_region=${GCP_REGION}" >> $GITHUB_ENV
          echo "TF_VAR_project_name=${GCP_PROJECT_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_initial_service_account_email=${{ vars.GITHUB_SERVICE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV

      - name: Terraform init
        run: terraform init
        working-directory: Terraform/bootstrap

      - name: Terraform plan
        run: terraform plan -out=tfplan
        working-directory: Terraform/bootstrap

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan
        working-directory: Terraform/bootstrap

      - name: Capture outputs
        run: |
          mkdir -p /tmp/credentials
          terraform output -raw tfstate_bucket > /tmp/credentials/bucket_name_production.txt
          terraform output -raw tf_sa_key_json > /tmp/credentials/sa_key_production.json
        working-directory: Terraform/bootstrap

      - name: Upload bucket name and service account key to artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-credentials-production
          path: /tmp/credentials/
