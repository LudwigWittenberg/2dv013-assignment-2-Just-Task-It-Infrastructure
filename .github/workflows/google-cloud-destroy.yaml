name: Google Cloud Destroy

on:
  workflow_dispatch:

jobs:
  google-cloud-destroy-user-and-apis:
    runs-on: ubuntu-latest
    environment: google-cloud
    needs: google-cloud-destroy-pipeline

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}

      - name: Set up ENV Variables
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          GCP_REGION: ${{ vars.GCP_REGION }}
          GCP_PROJECT_NAME: ${{ vars.GCP_PROJECT_NAME }}
          GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
        run: |
          echo "TF_VAR_project_id=${GCP_PROJECT_ID}" >> $GITHUB_ENV
          echo "TF_VAR_region=${GCP_REGION}" >> $GITHUB_ENV
          echo "TF_VAR_project_name=${GCP_PROJECT_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_email=${{ secrets.SERVICE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV
          echo "GCP_BUCKET_NAME=${{ vars.GCP_BUCKET_NAME }}" >> $GITHUB_ENV

      - name: Terraform init  
        run: terraform init -backend-config="bucket=${{ vars.GCP_BUCKET_NAME }}"
        working-directory: Terraform/user-and-apis

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        working-directory: Terraform/user-and-apis

  google-cloud-destroy-cluster:
      runs-on: ubuntu-latest
      environment: google-cloud
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v3

        - name: Authenticate to Google Cloud
          uses: google-github-actions/auth@v2
          with:
            credentials_json: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}

        - name: Set up ENV Variables
          env:
            GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
            GCP_REGION: ${{ vars.GCP_REGION }}
            GCP_PROJECT_NAME: ${{ vars.GCP_PROJECT_NAME }}
            GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
          run: |
            echo "TF_VAR_project_id=${GCP_PROJECT_ID}" >> $GITHUB_ENV
            echo "TF_VAR_region=${GCP_REGION}" >> $GITHUB_ENV
            echo "TF_VAR_project_name=${GCP_PROJECT_NAME}" >> $GITHUB_ENV
            echo "TF_VAR_email=${{ secrets.SERVICE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV
            echo "GCP_BUCKET_NAME=${{ vars.GCP_BUCKET_NAME }}" >> $GITHUB_ENV

        - name: Terraform init  
          run: terraform init -backend-config="bucket=${{ vars.GCP_BUCKET_NAME }}"
          working-directory: Terraform/cluster

        - name: Terraform destroy
          run: terraform destroy -auto-approve
          working-directory: Terraform/cluster

  google-cloud-destroy-pipeline:
    runs-on: ubuntu-latest
    environment: google-cloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}

      - name: Set up ENV Variables
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          GCP_REGION: ${{ vars.GCP_REGION }}
          GCP_PROJECT_NAME: ${{ vars.GCP_PROJECT_NAME }}
          GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
          GOOGLE_INSTALLATION_ID: ${{ secrets.GOOGLE_INSTALLATION_ID }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          GOOGLE_PROJECT_NUMBER: ${{ secrets.GOOGLE_PROJECT_NUMBER }}
          REPO_LINK: ${{ vars.REPO_LINK }}
        run: |
          echo "TF_VAR_project_id=${GCP_PROJECT_ID}" >> $GITHUB_ENV
          echo "TF_VAR_region=${GCP_REGION}" >> $GITHUB_ENV
          echo "TF_VAR_project_name=${GCP_PROJECT_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_email=${{ secrets.SERVICE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV
          echo "GCP_BUCKET_NAME=${GCP_BUCKET_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_github_app_installation_id=${GOOGLE_INSTALLATION_ID}" >> $GITHUB_ENV
          echo "TF_VAR_github_token=${GITHUB_TOKEN}" >> $GITHUB_ENV
          echo "TF_VAR_project_number=${GOOGLE_PROJECT_NUMBER}" >> $GITHUB_ENV
          echo "TF_VAR_github_repo=${REPO_LINK}" >> $GITHUB_ENV
          
      - name: Terraform init
        run: terraform init -backend-config="bucket=${{ vars.GCP_BUCKET_NAME }}"
        working-directory: Terraform/build

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        working-directory: Terraform/build